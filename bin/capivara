#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'capivara'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/capivara` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/capivara now"
  exit 64
end

class App
  extend GLI::App

  program_desc 'A generator folders and files for capybara automation templates'

  version Capivara::VERSION

  subcommand_option_handling :normal
  arguments :strict

  desc 'Describe some switch here'
  switch [:s,:switch]

  desc 'Describe some flag here'
  default_value 'the default'
  arg_name 'The name of the argument'
  flag [:f,:flagname]

  desc 'Generate a Gherkin, Page or Step'
  # arg_name 'capivara generate --a '
  command :generate do |c|

    c.desc 'Create All files'
    c.flag [:a, :all]

    c.desc 'Create Steps files'
    c.flag [:s, :step]

    c.desc 'Create Pages Objects files'
    c.flag [:p, :page]

    c.desc 'Create Gherkin files'
    c.flag [:g, :gherkin]

    c.action do |global_options,options,args|
      puts "options - #{options}"
      puts "args - #{args}"
      Commands::Generate.new.start(args)
    end
  end

  pre do |global,command,options,args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global,command,options,args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
